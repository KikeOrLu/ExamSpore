EXAMEN DE SISTEMAS EMBEBIDOS
SECCIÓN 1: FUNDAMENTOS DE MICROCONTROLADORES 
1. Diferencias entre HSE y LSE
Explica las diferencias entre los osciladores de alta velocidad (HSE) y baja velocidad (LSE).  

En los microcontroladores, HSE (High-Speed External) y LSE (Low-Speed External) son dos tipos de fuentes de reloj externas que se utilizan para diferentes propósitos:
HSE (High-Speed External): Generalmente se utiliza para frecuencias más altas.Su uso mas comoun es para tareas que requieren alta precisión y velocidad, como la 
comunicación USB, Ethernet, y otras interfaces de alta velocidad.
LSE (Low-Speed External): Este permitir que el oscilador de baja potencia funcione con un cristal externo y funcione como entrada para el peripehral RTC, opera a 
frecuencias mucho más bajas, típicamente 32 kHz, que es una frecuencia estándar para relojes de tiempo real (RTC), usualmente se usa para aplicaciones que requieren 
bajo consumo de energía y alta precisión en el tiempo, como los relojes de tiempo real (RTC).


2. Uso de un TCXO
¿En qué casos se utiliza un TCXO y qué configuración especial se debe tener en cuenta en el microcontrolador?  
Un TCXO (Temperature Compensated Crystal Oscillator) es un tipo de oscilador de cristal que se utiliza en microcontroladores para proporcionar una señal de reloj muy 
precisa y estable, incluso cuando hay variaciones de temperaturaSus usos puede ser en sistemas de comunicación ( como radios y equipos de telecomunicaciones, donde la
precisión de la frecuencia es crucial ), dispositivos GPS, equipos de medición y prueba, relojes y temporizadores de alta precisión.
Se debe tomar en cuenta la fuente de alimentación estable (tiene que recibir una fuente de alimentación estable y libre de ruido para mantener su precisión), configuración 
de Entrada de Reloj, compensación de temperatura,


3. Modos de consumo energético
Describe los modos de consumo energético en un microcontrolador y las limitaciones que tiene cada uno.
Los microcontroladores pueden operar en varios modos de consumo energético, por ejemplo: 
•	Modo Activo: El microcontrolador está completamente operativo, ejecutando instrucciones y utilizando todos sus periféricos, ademas es el modo de mayor consumo energético.
•	Modo Light Sleep: El microcontrolador apaga partes del sistema, como la CPU, pero mantiene activos algunos periféricos y la memoria RAM.
•	Modo Deep Sleep: La mayoría de los componentes del microcontrolador se apagan, incluyendo la CPU y la memoria RAM, pero se mantiene un reloj en tiempo real (RTC) y algunos periféricos esenciales.
•	Modo Hibernación: El microcontrolador apaga casi todos sus componentes, incluyendo el RTC.
•	Modo Power Off: El microcontrolador está completamente apagado.


4. Estados de un GPIO y modos OP/PP
Describe los tres tipos de estados de un GPIO y los modos de salida: Open Drain (OD) y Push-Pull (PP). 

Cada uno de los pines GPIO puede configurarse por software como salida (push-pull o open-drain), como entrada (con o sin pull-up o pull-down) o como función periférica 
alternativa (AF). La mayoría de los pines GPIO se comparten con funciones digitales o analógicas especiales.

La salida Push-Pull (Push-Pull Output) puede generar dos niveles de voltaje, uno es el nivel alto (push, corriente de tracción, voltaje alto de salida) y el otro es el 
nivel bajo (pull, corriente de drenaje, voltaje bajo de salida). La salida Push-Pull se puede implementar utilizando un par de interruptores, generalmente transistores 
o transistores de efecto de campo (FET), en el chip.

La salida de Drenaje Abierto (OD, Open Drain Output) se refiere a la apertura del drenaje del transistor MOS. También se le conoce históricamente como salida de Colector 
Abierto (OC, Open Collect Output). La forma más básica de salida de Drenaje Abierto tiene solo dos estados: bajo y alta impedancia. Si se requiere un nivel alto de salida, 
se necesita una resistencia de pull-up externa.


5. Funcionamiento del módulo ADC
Explica cómo funciona un módulo ADC en un microcontrolador y su relación con el controlador de reloj (RCC). 

Un módulo ADC (Convertidor Analógico a Digital) en un microcontrolador convierte señales analógicas en datos digitales que el microcontrolador puede procesar. 
El módulo ADC recibe una señal analógica a través de uno de sus pines de entrada. Los microcontroladores suelen tener múltiples canales ADC, permitiendo seleccionar entre 
varias entradas analógicas. La señal analógica se convierte en una señal digital mediante un proceso de muestreo y cuantificación. La resolución del ADC (por ejemplo, 8 bits, 
10 bits, 12 bits) determina la precisión de esta conversión. El valor digital resultante se almacena en un registro específico del microcontrolador, desde donde puede ser leído
y procesado por el software.

En un microcontrolador como el STM32, la configuración del ADC y su reloj podría implicar los siguientes pasos:
•	Habilitar el Reloj del ADC: Usar el RCC para habilitar el reloj del periférico ADC.
•	Configurar el Canal ADC: Seleccionar el canal de entrada analógica que se desea convertir.
•	Ajustar la Frecuencia del Reloj: Configurar la frecuencia del reloj del ADC a través del RCC para asegurar una conversión precisa.
•	Iniciar la Conversión: Comenzar la conversión y leer el valor digital resultante del registro del ADC.


6. Funcionamiento del NVIC
Indica cómo funciona el NVIC (Nested Vectored Interrupt Controller) y enlista al menos 5 tipos de interrupciones.  
El NVIC (Nested Vectored Interrupt Controller) es un componente crucial en los microcontroladores ARM Cortex-M. Su función principal es gestionar las interrupciones 
y excepciones, permitiendo una respuesta rápida y de baja latencia a eventos que requieren atención inmediata.

En la mayoría de los microcontroladores, la función de interrupción permite que un periférico o un hardware externo envíe una solicitud a un procesador para que el 
procesador pueda ejecutar un fragmento de código para atender la solicitud. El proceso implica suspender la tarea de ejecución actual, o despertar del modo de suspensión, y ejecutar el fragmento de código de software llamado controlador de excepciones para atender la solicitud. Después de atender la solicitud, el procesador puede reanudar el código interrumpido anterior.
Flujo de interrupción:
•	El periférico activa una interrupción en el procesador.
•	El procesador suspende la ejecución del flujo del programa. Modo de subproceso.
•	Se guardan los registros de uso general del procesador (incluido el contador de programa). Apilamiento.
•	El procesador ejecuta la rutina de servicio de interrupción (ISR) del periférico de activación. Modo de controlador.
•	Los registros de procesador guardados se recuperan y restauran. Desapilar.
•	El procesador vuelve a ejecutar el flujo del programa anterior.
•	El procesador sabe exactamente qué instrucción reanudar, ya que el contador de programa anterior se guardó antes de la interrupción.
Tipos de interrupción:
•	WWDG - Interrupción de perro guardian
•	RCC/CRS - Interrupción global RCC
•	DMA1_Channel - Interrupción del canal 1DMA1
•	FLASH - Interrupción global de Flash
•	ADC_COMP - Interrupciones ADC y COMP (ADC combinado con EXTI 17 & 18)
•	Reset - Reinicio
•	NMI_Handler - Interrupción no enmascarable. 
•	HardFault_Handler - Toda clase de fallo
•	SVC_Handler - Llamada de servicio del sistema mediante instrucción SWI
•	PendSV_Handler - Petición pendible de servicio del sistema
•	SysTick_Handler - Temporizador de tick del sistema
